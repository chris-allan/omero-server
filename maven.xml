<project
  xmlns:ant="jelly:ant"

>

 <!-- see doc under: http://www.codeczar.com/products/maven-tomcat-plugin/ -->
 <!-- 
	tomcat:(re-|un-)deploy: Use for remote serviers
	tomcat:install,reload,remove use the expanded directory
	 (use for local instances where the build dir is visible)
  -->
 <goal name="tomcat-redo">
   <attainGoal name="tomcat:remove"/>
   <attainGoal name="tomcat:install"/>
 </goal>

 <!-- DB STUFF: TODO Perhaps in a build.xml (or use appfuses) -->
 
 <goal name="dbunit">
   <ant:taskdef name="dbunit" classname="org.dbunit.ant.DbUnitTask"
	classpathref="maven.dependency.classpath"/>
 </goal>

 <goal name="db-load">
   <attainGoal name="dbunit"/>
   <ant:property name="operation" value="CLEAN_INSERT"/>
   <ant:property name="file" value="db-export.xml"/>
   <ant:dbunit driver="${database.driver_class}"
               supportBatchStatement="false"
               url="${database.url}"
               userid="${database.username}"
               password="${database.password}">
     <ant:operation type="${operation}" src="${file}"
                    format="xml"/>
  </ant:dbunit>       
 </goal>

 <goal name="db-export">
   <attainGoal name="dbunit"/>
   <ant:dbunit driver="${database.driver}"
            url="${database.url}"
            userid="${database.userid}"
            password="${database.password}">
     <ant:export dest="db-export.xml" format="xml"/>
   </ant:dbunit>
 </goal>

<goal name="run-groovyc" prereqs="java:compile,test:compile">
   
   <path id="groovy.classpath">
     <pathelement path="${maven.build.dest}"/>
     <pathelement path="target/classes"/>
     <pathelement path="target/test-classes"/>
     <path refid="maven.dependency.classpath"/>
   </path>

 <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc">
    <classpath refid="groovy.classpath"/>
 </taskdef>

 <groovyc destdir="${basedir}/target/test-classes"
          srcdir="${basedir}/test" 
          listfiles="true">
	<classpath refid="groovy.classpath"/>
 </groovyc>

 </goal>

</project>
